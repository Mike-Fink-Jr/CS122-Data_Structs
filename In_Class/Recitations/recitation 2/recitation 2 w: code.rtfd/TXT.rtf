{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;\red38\green38\blue38;
\red23\green47\blue137;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth220\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth5380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl256

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \cell 
\pard\intbl\itap1\pardeftab720\sl256\qr
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \pard\intbl\itap1\pardeftab720\sl256\qr
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \lastrow\row
\pard\pardeftab720\qc

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720

\fs22 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth5880\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc

\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
Submitted by FINK, MICHAEL (MJF5614) on 1/26/2015 12:11:03 PM\
\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrs\brdrw20\brdrcf3 \trbrdrl\brdrs\brdrw20\brdrcf3 \trbrdrr\brdrs\brdrw20\brdrcf3 
\clvertalt \clshdrawnil \clwWidth1980\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadt80 \clpadl80 \clpadb80 \clpadr80 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth680\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadt80 \clpadl80 \clpadb80 \clpadr80 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Points Awarded
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720\qr

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 20.00
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrs\brdrw20\brdrcf3 \trbrdrr\brdrs\brdrw20\brdrcf3 
\clvertalt \clshdrawnil \clwWidth1980\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadt80 \clpadl80 \clpadb80 \clpadr80 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth680\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadt80 \clpadl80 \clpadb80 \clpadr80 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Missed
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720\qr

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 0.00
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrs\brdrw20\brdrcf3 \trbrdrb\brdrs\brdrw20\brdrcf3 \trbrdrr\brdrs\brdrw20\brdrcf3 
\clvertalt \clshdrawnil \clwWidth1980\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadt80 \clpadl80 \clpadb80 \clpadr80 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth680\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw20\brdrcf3 \clbrdrb\brdrs\brdrw20\brdrcf3 \clbrdrr\brdrs\brdrw20\brdrcf3 \clpadt80 \clpadl80 \clpadb80 \clpadr80 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Percentage
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720\qr

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 100%
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 1.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Today's recitation is a quick introduction to iterators, which will be used extensively in the next couple homework assignments. An iterator is used to visit the elements of a container object, without revealing just how that container is implemented.\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 For this homework, to assure that the implementation details are hidden, it will use an iterator class already implemented in the C++ Standard Template Library. The details about templates are not important today.\
We will start simply, by completing 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 print()
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  function at the top of the given program. Every container defines 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 begin()
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  and 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 end()
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  to mark the endpoints of the data.\uc0\u8232 begin() yields an iterator pointing to the first element.\u8232 end() yields an iterator that does NOT point to the last element, but just beyond it.\
The loop given in the code says loop while 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 false
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , which is clearly incorrect. What would be the loop condition for this loop?\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Feedback: 
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 This is one reason why 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 end()
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  is not the same as the tail of the list.\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth3980\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth300\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 1.0/1.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clmgf \clvertalt \clshdrawnil \clwWidth4380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clmrg \clvertalt \clshdrawnil \clwWidth4380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Correct Answer(s):
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720

\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 while ( iter != data.end() )
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 2.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 You can either expect that your small program addition works and move on, or you can actually take the time to verify it. It would be good to note just how that 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 print
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  function actually obtains the data values it is displaying.\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The rest of the assignment will consist of adding code to the 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 main
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  function.\
The next small thing to do is to complete the first loop provided in the code, which is to search for a 3 in the data. This loop will actually have 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 two
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  loop conditions. For full credit, both conditions must be tested together -- using 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 break
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  to leave this loop is not permitted.\
What are the two different things to test when repeating this loop?\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Feedback: 
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 This is not much different from searching an array.\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2120\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth12080\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth1040\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 2.0/2.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2120\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clmgf \clvertalt \clshdrawnil \clwWidth13220\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clmrg \clvertalt \clshdrawnil \clwWidth13220\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Correct Answer(s):
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 That we have not gone off the end of the list ( iter != sample.end() ) and that we have not yet found our target value ( *iter != 3 )\cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 3.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 insert
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  method for STL containers takes two arguments: an iterator indicating where to insert, and a value to insert. An example has already been provided to insert the value 4. The next task is to use this same method to add new values to the endpoints of the list. Full credit will be granted to the simplest solutions.\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Note that this insert method defines that a newly inserted value will be inserted 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 before
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  the value currently referred to by the iterator.\
Why would it not be appropriate to instead define that 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 insert
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  places the new value 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 after
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  the current value?\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Feedback: 
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Having 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 insert
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  this way also makes affecting the endpoints easy.\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth8360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth700\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 2.0/2.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clmgf \clvertalt \clshdrawnil \clwWidth9160\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clmrg \clvertalt \clshdrawnil \clwWidth9160\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Correct Answer(s):
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Such a definition would never allow insertions before the first element in the list.\cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 4.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Once you have correctly inserted the 1 and 6 into this linked list, the next steps should be easy instances of repetition.\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 First write the loop that displays all the even values (without changing the data), and then the one that duplicates them in place (so that the list contains additional data).\
When it comes to doing changes to a container in the middle of a traversal, sometimes the current iterator variable gets a little lost, so the container method returns a pointer to the newly inserted value. If you ignore the return value from 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 insert
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  within your loop, you may get some unpredictable results.\
Let me quickly discuss this particular case of using the STL vector:\uc0\u8232 The vector is very much like an array whose size can grow as necessary. But if the memory following that vector is already in use by other variables, then the whole thing must be reallocated and copied elsewhere. Since the iterator is a value parameter to the 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 insert
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  method, it would no longer be able to refer to the actual vector.\
Therefore, it would be good practice to use that return value to make sure the iterator is current.\
But with that in mind, what danger does your loop have if you simply assign 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 iter = insert(...)
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ?\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth12760\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth1100\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 2.0/2.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1380\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clmgf \clvertalt \clshdrawnil \clwWidth13960\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clmrg \clvertalt \clshdrawnil \clwWidth13960\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Correct Answer(s):
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If the iterator points at the newly inserted value, which precedes the value we just duplicated, further loop repetitions would continually duplicate the same even value, and we would have an infinite loop.\cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 5.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Only one bit of code is left to complete: code to remove all even numbers from the list.\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 erase
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  method takes one argument: an iterator indicating which value to remove. It is defined to return an iterator referring to the value immediately after the one being removed. (It would not be good to continue to refer to a deleted object).\
If you have any difficulty in removing all the even numbers, a sketch of how this return value works should be helpful.\
When done, submit using the Upload button below.\
Note that this recitation is not yet complete, so come back here after you have done so.\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "https://cms.psu.edu/Section/Assessment/Delivery/OfflineItemDownload.aspx?deliveredId=077c6484-76b2-4bac-9c02-1de4ed034804&file=iterSource.cpp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 \outl0\strokewidth0 \strokec5 iterSource.cpp}}\
\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1840\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth1100\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 10.0/10.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 6.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Let us actually verify that we have good information hiding in our iterator.The edits you make here should not be included in the submission you just made,but are just here to experiment with.\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 So far this recitation stored all the data in an STL 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 vector
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 . Let us instead use the STL 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 list
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .\
The word 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 vector
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  appears five times in this source file (unless you added more usages). There is the 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 #include
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  at the top, two declarations in function 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 print
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 and two declarations at the top of function 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 main
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .\
Replace all those words 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 vector
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  with 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 list
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , and try to rerun the program.\
True/False: It still works!\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 A) True\
B) False\
\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth800\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 1.0/1.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clmgf \clvertalt \clshdrawnil \clwWidth900\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clmrg \clvertalt \clshdrawnil \clwWidth900\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Correct Answer(s):
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 True\cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\pard\pardeftab720

\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 7.\
\pard\pardeftab720

\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Hopefully, it still works. That would be an important note when we implement our own Iterators for the homework assignments. An iterator is introduced in Homework 2 to traverse all the characters in an input array. Iterators will later be used to traverse linked lists (the next course topic).\
\pard\pardeftab720\sa256
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The assignments will be implementing these iterators "from scratch" instead of using those from the Standard Template Library. But for now their use will be greatly simplified.\
We will only use the iterators to traverse the data from beginning to end. Our containers will define 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 begin()
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  and 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 end()
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  as appropriate, but will not provide the 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 insert
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  or 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 erase
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  methods; the data will be for inspection only.\
Unfortunately, not all of you would know how to define the 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 *
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  and 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ++
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  operators to use with iterators. So instead these operations will be given actual function names.\
Take a peek at the 
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 tokenlist.h
\f0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  header file for Homework 2. What functions correspond to the two operators mentioned above?\
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720\qc
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table for Individual Question Feedback\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth8940\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth760\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Points Earned:\cell 
\pard\intbl\itap1\pardeftab720

\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 2.0/2.0\cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth2360\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx2880
\clmgf \clvertalt \clshdrawnil \clwWidth9800\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx5760
\clmrg \clvertalt \clshdrawnil \clwWidth9800\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt40 \clpadl40 \clpadb40 \clpadr40 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Correct Answer(s):
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell 
\pard\intbl\itap1\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The * operator is represented by tokenChar() and the ++ is represented by advance()\cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\pardeftab720
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\
\
\
\
\
\
\
\
\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
iterSource.cpp\
\
\
\
\
\pard\pardeftab720

\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // A program that practices with an iterator.\
// The Standard Template Library is used for this recitation\
// primarily so that all interaction must be through the\
// iterator itself, since all the private data members are hidden.\
#include <iostream>\
#include <vector>\
using namespace std;\
\
//  print\
//  Prints out the contents of a list, using an iterator\
//  Parameter:\
//       data	(input list)	data to display\
void print(vector<int> data)\
\{\
	vector<int>::iterator iter;		// an iterator to use\
\
	cout << "List: ";\
	iter = data.begin();\
	while (iter!=data.end())\
	\{\
		cout << *iter << " ";\
		++iter;\
	\}\
	cout << endl;\
\}\
\
int main()\
\{\
	int initialData[] = \{ 2, 5, 3, 8, 7 \};\
	vector<int> sample(initialData, initialData + 5);\
	vector<int>::iterator iter = sample.begin();\
\
	// print the list as it appears\
	print(sample);\
\
	// locate the 3, and then insert a 4 before the 3\
	for (iter = sample.begin(); iter!=sample.end()&& *iter!=3; ++iter)\
	\{\
	\
	\
		\
		\
	\}	\
\
		sample.insert(iter, 4);\
	print(sample);\
	// insert a 1 at the beginning and 6 at the end\
	iter = sample.begin();\
	sample.insert(iter, 1);\
	iter = sample.end();\
	sample.insert(iter, 6);\
	print(sample);			// check 1 and 8 insertions\
\
	// display all even values\
	iter = sample.begin();\
	cout << "Even List : ";\
	while (iter != sample.end())\
	\{\
		if (*iter % 2 == 0)\
		\{\
			cout << *iter << " ";\
		\
		\}\
		++iter;\
	\}\
	cout << endl;\
\
\
\
\
	// duplicate all even values\
	iter = sample.begin();\
\
	while (iter != sample.end())\
	\{\
		if (*iter % 2 == 0)\
		\{\
			iter = sample.insert(iter, *iter);\
			iter++;\
		\}\
		iter++;\
	\}\
	\
\
\
\
\
	print(sample);			// check effect of duplication\
\
	// remove all even values\
	iter = sample.begin();\
	while (iter != sample.end())\
	\{\
		if (*iter % 2 == 0)\
		\{\
			iter=sample.erase(iter);\
			\
	\
		\}else\
\
		iter++;\
	\}\
\
	print(sample);			// check effect of removal\
\}\
\pard\pardeftab720

\f0\fs26 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
}